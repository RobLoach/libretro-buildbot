#!/bin/bash

# ----- setup -----

LOGDATE=`date +%Y-%m-%d`
BUILDBOT=win-bot
if [ "${RELEASE}" == "YES" ]; then
   RADEST=$BASEDIR/www/stable/$VERSION/windows/x86/
   FNAME=RetroArch
else
   RADEST=$BASEDIR/www/nightly/windows/x86/
   FNAME=$(date +%F)_RetroArch
fi
DEST=$BASEDIR/www/nightly/windows/x86/
LOGDEST=$BASEDIR/www/log
TMPDIR=$BASEDIR/.tmp/
WORKDIR=$BASEDIR/buildbot
BOT=$WORKDIR/windows_x86

cd $WORKDIR
cd $BOT
rm -rfv packages


mkdir -p $DEST
mkdir -p $RADEST

echo buildbot starting 
echo --------------------------------------------------

echo Variables:
echo WORKDIR $WORKDIR
echo BOTDIR  $BOT
echo TMPDIR  $TMPDIR
echo DEST    $DEST
echo RADEST  $RADEST
echo
echo

echo updating scripts
echo
echo

git pull
git clean -xdf

# ----- buildbot -----

echo building retroarch
echo
echo
TMPDIR=$TMPDIR LOGURL=$LOGURL SIG=$SIG BOT=$BUILDBOT JOBS=2 $BOT/libretro-buildbot-recipe.sh recipes/windows/retroarch-windows-x86_dw2

echo building cores
echo
echo
TMPDIR=$TMPDIR LOGURL=$LOGURL SIG=$SIG BOT=$BUILDBOT JOBS=2 $BOT/libretro-buildbot-recipe.sh recipes/windows/cores-windows-x86_dw2-generic
TMPDIR=$TMPDIR LOGURL=$LOGURL SIG=$SIG BOT=$BUILDBOT JOBS=2 $BOT/libretro-buildbot-recipe.sh recipes/windows/cores-windows-x86_dw2-cross
TMPDIR=$TMPDIR LOGURL=$LOGURL SIG=$SIG BOT=$BUILDBOT JOBS=2 $BOT/libretro-buildbot-recipe.sh recipes/windows/cores-windows-x86_sjlj-generic

# ----- packaging -----

if [ ! -f $TMPDIR/built-frontend -a ! -f $TMPDIR/built-cores ]; then
    echo "Nothing to do here!"
else
   echo packaging cores
   echo --------------------------------------------------

   CORE_DIR=$BOT/packages/$(date +%F)_cores

   echo Variables:
   echo COREDIR $CORE_DIR
   echo
   echo

   rm -rfv $CORE_DIR
   mkdir -p $CORE_DIR

   cd $CORE_DIR
   mkdir ../latest

   find $BOT/dist/win_x86 -name '*.dll' -mmin -2160 -exec cp '{}' . \;

   find . -type f -name '*.dll' -exec zip -j '{}'.zip '{}' \;
   find . -type f -name '*.dll' -exec rm -v '{}' \;
   cp -v *.zip ../latest/
   rm -v *.zip

   echo
   echo
   echo done ...

   echo packaging retroarch
   echo --------------------------------------------------

   RA_DIR=$BOT/packages/$(date +%F)_retroarch

   echo Variables:
   echo RADIR   $RA_DIR
   echo
   echo

   rm -rfv $RA_DIR

   mkdir -p $RA_DIR

   cd $RA_DIR
   cp -rfv $BOT/retroarch/windows/* .
   7z a -mx9 $RADEST/$(date +%F)_RetroArch.7z .

   curl -O http://bot.libretro.com/assets/frontend/bundle.zip
   unzip -o bundle.zip
   rm -rf bundle.zip

   wget http://bot.libretro.com/nightly/windows/x86/redist-x86.7z
   7z x redist-x86.7z
   rm redist-x86.7z

   7z a -mx9 $RADEST/RetroArch.7z .

   cd $BOT
   rm -rfv $RA_DIR
   cp -rfv packages/* $DEST
   cp -rfv $TMPDIR/log/* $LOGDEST

   echo
   echo
   echo done ...
fi

# ----- end -----
rm $TMPDIR/built-cores $TMPDIR/built-frontend


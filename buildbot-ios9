#!/bin/bash
# ----- setup -----

LOGDATE=`date +%Y-%m-%d`
BUILDBOT=vaporeon_osx
if [ "${RELEASE}" == "YES" ]; then
   RADEST=$BASEDIR/www/stable/$VERSION/apple/ios9/
   FNAME=RetroArch9.zip
else
   RADEST=$BASEDIR/www/nightly/apple/ios9/
   FNAME=$(date +%F)_RetroArch9.zip
fi
DEST=$BASEDIR/www/nightly/apple/ios/
LOGDEST=$BASEDIR/www/log
TMPDIR=$BASEDIR/.tmp/
WORKDIR=$BASEDIR/buildbot
BOT=$WORKDIR/ios9

cd $WORKDIR
cd $BOT
rm -rfv packages

mkdir -p $TMPDIR/log/$BUILDBOT/${LOGDATE}
mkdir -p $DEST

echo buildbot starting | tee $TMPDIR/log/${BUILDBOT}/${LOGDATE}.log
echo -------------------------------------------------- | tee -a $TMPDIR/log/${BUILDBOT}/${LOGDATE}.log

echo Variables:
echo WORKDIR $WORKDIR
echo BOTDIR  $BOT
echo TMPDIR  $TMPDIR
echo DEST    $DEST
echo RADEST  $RADEST
echo
echo

echo updating scripts | tee -a $TMPDIR/log/${BUILDBOT}/${LOGDATE}.log
echo
echo

git pull
git clean -xdf

# ----- buildbot -----
echo building retroarch | tee -a $TMPDIR/log/${BUILDBOT}/${LOGDATE}.log
echo
echo
TMPDIR=$TMPDIR LOGURL=$LOGURL SIG=$SIG BOT=$BUILDBOT JOBS=6 ./libretro-buildbot-recipe.sh recipes/apple/retroarch-ios9
echo building cores | tee -a $TMPDIR/log/${BUILDBOT}/${LOGDATE}.log
echo
echo
TMPDIR=$TMPDIR LOGURL=$LOGURL SIG=$SIG BOT=$BUILDBOT JOBS=6 ./libretro-buildbot-recipe.sh recipes/apple/cores-ios9-generic

# ----- packaging -----

if [ ! -f $TMPDIR/built-frontend -a ! -f $TMPDIR/built-cores ]; then
    echo "Nothing to do here!"
else
   echo packaging cores | tee -a $TMPDIR/log/${BUILDBOT}/${LOGDATE}.log
   echo -------------------------------------------------- | tee -a $TMPDIR/log/${BUILDBOT}/${LOGDATE}.log
   
   CORE_DIR=$PWD/packages/$(date +%F)_cores

   echo Variables:
   echo COREDIR $CORE_DIR
   echo
   echo

   mkdir -p $CORE_DIR
   mkdir -p $DEST

   cd $CORE_DIR
   mkdir ../latest

   find $BOT/dist/ios9 -name '*.dylib' -mmin -2160 -exec cp '{}' . \;

   find . -type f -name '*.dylib' -exec zip -j '{}'.zip '{}' \;
   find . -type f -name '*.dylib' -exec rm -v '{}' \;
   cp -v *.zip ../latest/
   rm -v *.zip

   echo
   echo
   echo done ...

   echo packaging retroarch | tee -a $TMPDIR/log/${BUILDBOT}/${LOGDATE}.log
   echo -------------------------------------------------- | tee -a $TMPDIR/log/${BUILDBOT}/${LOGDATE}.log

   RA_DIR=$BOT/packages/$(date +%F)_retroarch

   echo Variables:
   echo RADIR   $RA_DIR
   echo
   echo

   rm -rfv $RA_DIR

   mkdir -p $RA_DIR

   cd $RA_DIR
   cp -rf $BOT/retroarch/pkg/apple/build/Release-iphoneos/RetroArch.app .

   mkdir -p tmp
   cd tmp

   curl -O http://bot.libretro.com/assets/frontend/bundle.zip
   unzip -o bundle.zip
   rm -rf bundle.zip

   rm -rf $RA_DIR/RetroArch.app/shaders/shaders_cg
   rm -rf $RA_DIR/RetroArch.app/assets
   zip -r $RA_DIR/RetroArch.app/assets.zip .
   
   cd $RA_DIR

   rm -rf tmp
   rm -rf $RADEST/$FNAME
   zip -r $RADEST/$FNAME .
   rm -rf RetroArch.app

   cd $BOT
   cp -rfv packages/* $DEST
   cp -rfv $TMPDIR/log/* $LOGDEST

   echo
   echo
   echo done ...
fi

# ----- end -----
rm $TMPDIR/built-cores $TMPDIR/built-frontend


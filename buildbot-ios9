#!/bin/bash

LOGDATE=`date +%Y-%m-%d`
BUILDBOT=vaporeon_osx
DEST=$BASEDIR/www/nightly/apple/ios9
LOGDEST=$BASEDIR/www/log
echo $LOGDATE $BUILDBOT
TMPDIR=$BASEDIR/.tmp/

mkdir -p $TMPDIR/log/$BUILDBOT/${LOGDATE}
echo Buildbot Summary | tee -a $TMPDIR/log/${BUILDBOT}/${LOGDATE}.log

cd $BASEDIR
cd buildbot
WORKDIR=$PWD

### ios9 ###

# prepare build environment
BOT=$PWD/ios9
cd $BOT
git pull

rm -rf packages
#build cores
TMPDIR=$TMPDIR LOGURL=$LOGURL SIG=$SIG BOT=$BUILDBOT JOBS=2 ./libretro-buildbot-recipe.sh recipes/apple/retroarch-ios9
TMPDIR=$TMPDIR LOGURL=$LOGURL SIG=$SIG BOT=$BUILDBOT JOBS=2 ./libretro-buildbot-recipe.sh recipes/apple/cores-ios9-generic

# create packages and cleanup
if [ ! -f $TMPDIR/built-frontend -a ! -f $TMPDIR/built-cores ]; then
    echo "Nothing to do here!"
else
	echo BUILDBOT TASK: packaging cores
	CORE_DIR=$PWD/packages/$(date +%F)_cores
	mkdir -p $CORE_DIR
	mkdir -p $DEST

	cd $CORE_DIR
	mkdir ../latest

	find ../../dist/ios9 -name '*.dylib' -mmin -2160 -exec cp '{}' . \;

	find . -type f -name '*.dylib' -exec zip -j '{}'.zip '{}' \;
	find . -type f -name '*.dylib' -exec rm -v '{}' \;
	cp -v *.zip ../latest/
	rm -v *.zip

        cp -rf ../../retroarch/pkg/apple/build/Release-iphoneos/RetroArch.app .

        mkdir -p tmp
        cd tmp
        curl -O http://bot.libretro.com/assets/frontend/bundle.zip
        unzip -f bundle.zip
        rm -rf bundle.zip
        rm -rf shaders/shaders_cg

        rm -rf ../RetroArch.app/assets
        zip -r ../RetroArch.app/assets.zip .
        cd $CORE_DIR
	
	rm -rf tmp
        zip -r $DEST/$(date +%F)_RetroArch_iOS9.zip .
        rm -rf RetroArch.app



	cd $BOT
	cp -rfv packages/* $DEST
	cp -rfv $TMPDIR/log/* $LOGDEST
fi

## end ###
rm $TMPDIR/built-cores $TMPDIR/built-frontend

